{{- $fullName := include "acp.fullname" . -}}
{{- $svcPort := include "acp.portNumber" . -}}
{{- if .Values.ingress.enabled -}}
{{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}
  labels:
    {{- include "acp.labels" . | nindent 4 }}
  annotations:
    {{- if not ( $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" ) }}
    kubernetes.io/ingress.class: {{ .Values.ingress.ingressClassName }}
    {{- end }}
    {{- if .Values.tlsDisabled }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    {{- else }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    nginx.ingress.kubernetes.io/proxy-ssl-protocols: "TLSv1.2"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-SSL-CERT "";
    {{- with .Values.ingress.customAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
  ingressClassName: {{ .Values.ingress.ingressClassName }}
  {{- end }}
  {{- if .Values.ingress.tls }}
  tls:
    {{- range .Values.ingress.tls }}
    - hosts:
        {{- range .hosts }}
        - {{ . | quote }}
        {{- end }}
      secretName: {{ .secretName }}
    {{- end }}
  {{- end }}
  rules:
    {{- range .Values.ingress.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
---
{{- if .Values.ingressMtls.enabled -}}
{{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
apiVersion: networking.k8s.io/v1
{{- else -}}
apiVersion: networking.k8s.io/v1beta1
{{- end }}
kind: Ingress
metadata:
  name: {{ $fullName }}-mtls
  labels:
    {{- include "acp.labels" . | nindent 4 }}
  annotations:
    {{- if not ( $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" ) }}
    kubernetes.io/ingress.class: {{ .Values.ingressMtls.ingressClassName }}
    {{- end }}
    nginx.ingress.kubernetes.io/auth-tls-verify-client: "optional_no_ca"
    nginx.ingress.kubernetes.io/auth-tls-verify-depth: "2"
    nginx.ingress.kubernetes.io/auth-tls-secret: {{ .Release.Namespace }}/{{ .Values.ingressMtls.secret.name }}
    {{- if .Values.tlsDisabled }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    {{- else }}
    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    {{- end }}
    nginx.ingress.kubernetes.io/proxy-ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    nginx.ingress.kubernetes.io/proxy-ssl-protocols: "TLSv1.2"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-buffer-size: "8k"
    nginx.ingress.kubernetes.io/ssl-ciphers: "EECDH+AESGCM:EDH+AESGCM"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header X-SSL-CERT $ssl_client_escaped_cert;
    {{- with .Values.ingress.customAnnotations }}
    {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
  ingressClassName: {{ .Values.ingressMtls.ingressClassName }}
  {{- end }}
  tls:
    - hosts:
        {{- range .Values.ingressMtls.hosts }}
        - {{ .host | quote }}
        {{- end }}
      secretName: {{ .Values.ingressMtls.secret.name }}
  rules:
    {{- range .Values.ingressMtls.hosts }}
    - host: {{ .host | quote }}
      http:
        paths:
          {{- range .paths }}
          - path: {{ .path }}
            {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            pathType: {{ .pathType }}
            {{- end }}
            backend:
              {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
              service:
                name: {{ $fullName }}
                port:
                  number: {{ $svcPort }}
              {{- else }}
              serviceName: {{ $fullName }}
              servicePort: {{ $svcPort }}
              {{- end }}
          {{- end }}
    {{- end }}
{{- end }}
