## istio-authorizer image parameters
##
image:
  ## Image repository
  ##
  repository: docker.cloudentity.io/istio-authorizer

  ## Image pull policy
  ##
  pullPolicy: IfNotPresent

  ## Image tag (immutable tags are recommended, default is the chart appVersion)
  ##
  tag: ""

## deployAsDaemonSet decides whether to deploy istio-authorizer as a DaemonSet or a Deployment.
##
deployAsDaemonSet: true

## Number of desired pod replicas if deployAsDaemonSet set to false.
##
replicas: 1

## Autoscaling parameters if deployAsDaemonSet set to false.
##
autoscaling:
  ## Enable autoscaling
  ##
  enabled: false

  ## Define mix replica count
  ##
  # minReplicas: 0
  ## Define max replica count
  ##
  # maxReplicas: 1
  ## The average CPU usage of a all pods in a deployment
  ##
  # targetCPUUtilizationPercentage: ""
  ## The average memory usage of a all pods in a deployment
  ##
  # targetMemoryUtilizationPercentage: ""

## A map with annotations
##
podAnnotations: []

## istio-authorizer image registry secret names as an array
##
imagePullSecrets:
  - name: docker.cloudentity.io

## Pod security context
##
podSecurityContext:
  fsGroup: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000

## Container security context
##
containerSecurityContext:
  readOnlyRootFilesystem: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

## String to fully override istio-authorizer.fullname
##
# fullnameOverride: ""

## Service account to use by the istio-authorizer
##
serviceAccount:
  ## Specifies whether a service account should be created
  ##
  create: true
  ## Annotations to add to the service account
  ##
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""

## Issuer URL of your tenant's ACP system workspace
##
## When using istio-authorizer in single-tenant mode, this should point
## to the system workspace of your tenant.
## i.e. "http://authz.cloudentity.io/yourtenant/system"
##
## If you're using multi-tenant istio-authorizer this should point
## to the `system` workspace of your `system` tenant.
## i.e. "http://yourdomain.com/system/system"
##
issuerURL: "https://acp.acp-system:8443/default/system"

## Vanity Domain
## If the issuerURL uses a vanity domain, you will need to specify the tenantID,
## and if the domain is per-server, then you must also specify the serverID.
##
tenantID: ""
serverID: ""

## Pod resources definition
resources: {}
  # requests:
  #   cpu: 10m
  #   memory: 48Mi
  # limits:
  #   cpu: 100m
  #   memory: 96Mi

## Enable body parsing
## If you want to use request body in your authorization policies, enable this flag.
## It's going to add a filter to Envoy which will propagate the request body to the authorizer.
parseBody:
  enabled: true
  ## Maximum number of requested bytes
  ##
  maxRequestBytes: 8192

  ## Custom list of namespaces that the parse body filter is applied to.
  ## If empty, namespaces from the discovery.namespaces parameter are used.
  ##
  namespaces: []

## Authorization policy
## Adds custom access control action that delegates authorization to Istio Authorizer for APIs deployed behind the Istio Service Mesh.
## https://istio.io/latest/docs/reference/config/security/authorization-policy/
##
authorizationPolicy:
  ## Once enabled, AuthorizationPolicy is applied for discovery.namespaces
  ##
  enabled: true

## Credentials for your ACP istio-authorizer
##
clientCredentials:
  ## Specifies whether a kubernetes secret should be created from the provided clientID and clientSecret.
  ## For production setup, please create the secret (ideally encrypted) manually
  ## parameter to integrate with istio-authorizer
  ##
  create: true

  ## The name of the client secret to use
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""

  ## Default dummy values
  ## You can provide credentials generated by ACP for your istio gateway.
  ##
  clientID: "YnZnN2h2YzA1NnV0YmdpaHF1OWcK"
  clientSecret: "aE0wdmYwZHNBMHkxSHBHZW1WXzlDa21iYmlOclp2NW92S1JDTm5hd2pJbwo="

## node selector for pod assignment
##
## nodeSelector: {}

## Affinity for pod assignment
##
affinity: {}
  # nodeAffinity:
  #   requiredDuringSchedulingIgnoredDuringExecution:
  #   nodeSelectorTerms:
  #     - matchExpressions:
  #         - key: authorizer
  #           operator: In
  #           values:
  #             - "true"

## Tolerations for pod assignment
##
tolerations: []
#- key: authorizer
#  value: "true"
#  effect: NoSchedule

## Logging configuration
##
logging:
  ## log level
  ##
  level: info

## Authorizer discovery configuration
##
discovery:
  ##  When true, API discovery is enabled
  ##
  enabled: true

  ## List of namespaces in which the authorizer discovers services.
  ##
  namespaces:
    - default

  ## if your service is self-hosting an OpenAPI endpoint, you need to provide the path to this endpoint to enable Istio authorizer to call this endpoint and automatically discover your APIs
  ##
  openApiEndpoint: ""

  ## allow grpc reflection calls
  ##
  grpcRefrectionCalls: false

## Enforcement configuration
##
enforcement:
  ## allow requests with no matching rule
  ##
  allowUnknown: false

## Cluster domain name
##
trustDomain: "cluster.local"

## Target Service configuration
targetService:
  ## Inject configuration
  ##
  inject:
    ## Headers configuration
    ##
    headers:
      ## custom data header name prefix used to propage global variables defined in a policy
      ##
      customDataPrefix: "x-output-"

      ## header name containing base64 encoded authentication context json object
      ##
      authCtx: "x-auth-ctx"

## Token exchange settings
##
tokenExchange:
  ## Enable token exchange (temporary until acp 2.0 is released)
  ##
  enabled: false

  ## Token exchange inject settings
  inject:
    ## Inject mode, defines what token should be send to the target service
    ## One of: InjectOriginalToken, InjectExchangedToken, InjectBothTokens
    ##
    mode: "InjectExchangedToken"

    headers:
      ## Original token header name
      ##
      originalToken: ""

      ## Exchanged token header name
      ##
      exchangedToken: "Authorization"

      ## strip bearer token
      ##
      stripBearer: false

## ACP http client configuration
##
# httpClient:
#   ## Set the ca.crt to the CA certificate used by ACP.
#   ## If you're exposing ACP with your own custom (not publicly trusted) certificates, Istio Authorizer needs to trust them.
#   ##
#   rootCa: |
#     -----BEGIN CERTIFICATE-----
#     -----END CERTIFICATE-----

## Additional istio-authorizer ConfigMap entries
## The data should match istio-authorizer configuration options
## https://docs.authorization.cloudentity.com/guides/developer/protect/istio/istio_authz_config/
##
extraConfig: {}

## Array with environment variables to add to the container
##
# extraEnvVars: []

